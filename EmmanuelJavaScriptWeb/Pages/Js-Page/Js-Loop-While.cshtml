@page
@model EmmanuelJavaScriptWeb.Pages.Js_Page.Js_Loop_WhileModel
@{
    ViewData["Title"] = "JavaScript Loop While";
}
<div class="container">
    <h1>JavaScript <span class="color_h1">While Loop</span></h1>
    <hr>
    <p class="intro">
        Loops can execute a block of code
        as long as a specified condition is true.
    </p>
    <hr>

    <h2>The While Loop</h2>
    <p>The <code class="w3-codespan">while</code> loop loops through a block of code as long as a specified condition is true.</p>

    <h3>Syntax</h3>
    <div class="w3-code w3-border notranslate jsHigh">
        <div>

            while (<em>condition</em>) {<br>
            <i>&nbsp; // code block to be executed</i><br>
            }
        </div>
    </div>

    <h3>Example</h3>
    <p>
        In the following example, the code in the loop will run, over and over again, as long as
        a variable (i) is less than 10:
    </p>

    <div class="w3-example">
        <h3>Example</h3>
        <div class="w3-code notranslate jsHigh">
            while (i &lt; 10) {<br>
            &nbsp; text += &quot;The number is &quot; + i;<br>
            &nbsp; i++;<br>}<br>
        </div>
    </div>

    <div class="w3-panel w3-note">
        <p>
            If you forget to increase the variable used in the condition, the loop will never end.
            This will crash your browser.
        </p>
    </div>

    <hr>
    <h2>The Do While Loop</h2>
    <p>
        The <code class="w3-codespan">do while</code> loop is a variant of the while loop. This loop will
        execute the code block once, before checking if the condition is true, then it will
        repeat the loop as long as the condition is true.
    </p>

    <h3>Syntax</h3>
    <div class="w3-code w3-border notranslate jsHigh">
        <div>

            do {<br>
            <i>
                &nbsp; // code block to be executed<br>
            </i>}<br>
            while (<em>condition</em>);
        </div>
    </div>

    <h3>Example</h3>

    <p>
        The example below uses a <code class="w3-codespan">do while</code> loop. The loop will always be
        executed at least once, even if the condition is false, because the code block
        is executed before the condition is tested:
    </p>

    <div class="w3-example">
        <h3>Example</h3>
        <div class="w3-code notranslate jsHigh">
            do {<br>
            &nbsp; text += &quot;The number is &quot; + i;<br>
            &nbsp; i++;<br>
            }<br>
            while (i &lt; 10);
        </div>
    </div>
    <p>
        Do not forget to increase the variable used in the condition, otherwise
        the loop will never end!
    </p>
    <hr>

    <h2>Comparing For and While</h2>
    <p>
        If you have read the previous chapter, about the for loop, you will discover that a while loop is
        much the same as a for loop, with statement 1 and statement 3 omitted.
    </p>
    <p>
        The loop in this example uses a <code class="w3-codespan">for</code> loop to collect the car
        names from the cars array:
    </p>

    <div class="w3-example">
        <h3>Example</h3>
        <div class="w3-code notranslate jsHigh">
            const cars = [&quot;BMW&quot;, &quot;Volvo&quot;, &quot;Saab&quot;, &quot;Ford&quot;];<br>
            let i = 0;<br>
            let text = &quot;&quot;;<br><br>
            for (;cars[i];) {<br>
            &nbsp;&nbsp;text += cars[i];<br>
            &nbsp;
            i++;<br>
            }
        </div>
    </div>
    <p>
        The loop in this example uses a <code class="w3-codespan">while</code> loop to collect the
        car names from the cars array:
    </p>

    <div class="w3-example">
        <h3>Example</h3>
        <div class="w3-code notranslate jsHigh">
            const cars = [&quot;BMW&quot;, &quot;Volvo&quot;, &quot;Saab&quot;, &quot;Ford&quot;];<br>
            let i = 0;<br>
            let text = &quot;&quot;;<br>
            <br>
            while (cars[i]) {<br>
            &nbsp; text += cars[i];<br>
            &nbsp;
            i++;<br>
            }
        </div>
    </div>

    <hr>
</div>

<div class="d-flex justify-content-between mt-3">
    <a class="btn btn-sm btn-success" asp-page="JS-Loop-For">&#10094; Previous</a>
    <a class="btn btn-sm btn-success" asp-page="Js-Best-Practice">Next &#10095;</a>
</div>