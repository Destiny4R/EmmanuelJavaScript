@page
@model EmmanuelJavaScriptWeb.Pages.Js_Page.Js_BooleanModel
@{
    ViewData["Title"] = "JavaScript Booleans";
}
<div class="container">
    <h1>JavaScript <span class="color_h1">Booleans</span></h1>
    <hr />
    <div class="w3-info">
        <p>
            A JavaScript Boolean represents one of two values: <strong>true</strong> or
            <strong>false</strong>.
        </p>
    </div>

    <h2>Boolean Values</h2>
    <p>
        Very often, in programming, you will need a data type that can only have one
        of two values, like
    </p>
    <ul>
        <li>YES / NO</li>
        <li>ON / OFF</li>
        <li>TRUE / FALSE</li>
    </ul>
    <p>
        For this, JavaScript has a <strong>Boolean</strong> data type. It can only
        take the values <strong>true</strong> or <strong>false</strong>.
    </p>
    <hr>

    <h2>The Boolean() Function</h2>
    <p>
        You can use the <code class="w3-codespan">Boolean()</code> function to find out if an expression (or a variable) is
        true:
    </p>

    <div class="w3-example">
        <h3>Example</h3>
        <div class="w3-code notranslate jsHigh">
            Boolean(10 &gt; 9)
        </div>
    </div>
    <p>Or even easier:</p>

    <div class="w3-example">
        <h3>Example</h3>
        <div class="w3-code notranslate jsHigh">
            (10 &gt; 9)<br>
            10 &gt; 9
        </div>
    </div>
    <hr>

    <h2>Comparisons and Conditions</h2>
    <p>The chapter JS Comparisons gives a full overview of comparison operators.</p>
    <p>The chapter JS Conditions gives a full overview of conditional statements.</p>
    <p>Here are some examples:</p>

    <table class="ws-table-all notranslate">
        <tr>
            <th style="width:10%">Operator</th>
            <th>Description</th>
            <th>Example</th>
        </tr>
        <tr>
            <td>==</td>
            <td>equal to</td>
            <td> if (day == &quot;Monday&quot;)</td>
        </tr>
        <tr>
            <td>&gt;</td>
            <td>greater than</td>
            <td>if (salary &gt; 9000)</td>
        </tr>
        <tr>
            <td>&lt;</td>
            <td>less than</td>
            <td> if (age &lt; 18)</td>
        </tr>
    </table>

    <div class="w3-panel w3-note">
        <p>The Boolean value of an expression is the basis for all JavaScript comparisons and conditions.</p>
    </div>

    <hr>
    <h2>Everything With a &quot;Value&quot; is True</h2>
    <div class="w3-example">
        <h3>Examples</h3>
        <div class="w3-code notranslate jsHigh">
            100<br><br>
            3.14<br><br>
            -15<br><br>
            &quot;Hello&quot;<br><br>
            &quot;false&quot;<br><br>
            7 + 1 + 3.14
        </div>
    </div>
    <hr>

    <h2>Everything Without a &quot;Value&quot; is False</h2>
    <div class="w3-example">
        <p>The Boolean value of <strong>0</strong> (zero) is <strong>false</strong>:</p>
        <div class="w3-code notranslate jsHigh">
            let x = 0;<br>
            Boolean(x);
        </div>
    </div>

    <div class="w3-example">
        <p>The Boolean value of <strong>-0</strong> (minus zero) is <strong>false</strong>:</p>
        <div class="w3-code notranslate jsHigh">
            let x = -0;<br>
            Boolean(x);
        </div>
    </div>

    <div class="w3-example">
        <p>The Boolean value of <strong>&quot;&quot; </strong>(empty string) is <strong>false</strong>:</p>
        <div class="w3-code notranslate jsHigh">
            let x = &quot;&quot;;<br>
            Boolean(x);
        </div>
    </div>

    <div class="w3-example">
        <p>The Boolean value of <strong>undefined</strong> is <strong>false</strong>:</p>
        <div class="w3-code notranslate jsHigh">
            let x;<br>
            Boolean(x);
        </div>
    </div>

    <div class="w3-example">
        <p>The Boolean value of <strong>null</strong> is <strong>false</strong>:</p>
        <div class="w3-code notranslate jsHigh">
            let x = null;<br>
            Boolean(x);
        </div>
    </div>

    <div class="w3-example">
        <p>The Boolean value of <strong>false</strong> is (you guessed it) <strong>false</strong>:</p>
        <div class="w3-code notranslate jsHigh">
            let x = false;<br>
            Boolean(x);
        </div>
    </div>

    <div class="w3-example">
        <p>The Boolean value of <strong>NaN</strong> is <strong>false</strong>:</p>
        <div class="w3-code notranslate jsHigh">
            let x = 10 / "Hallo";<br>
            Boolean(x);
        </div>
    </div>
    <hr>

    <h2>JavaScript Booleans as Objects</h2>

    <p>Normally JavaScript booleans are primitive values created from literals:</p>

    <div class="w3-example">
        <div class="w3-code notranslate jsHigh">
            let x = false;
        </div>
    </div>

    <p>But booleans can also be defined as objects with the keyword <code class="w3-codespan">new</code>:</p>
    <div class="w3-example">
        <div class="w3-code notranslate jsHigh">
            let y = new Boolean(false);
        </div>
    </div>

    <div class="w3-example">
        <h3>Example</h3>
        <div class="w3-code notranslate jsHigh">
            let x = false;<br>
            let y = new Boolean(false);<br><br>
            //
            typeof x returns boolean<br>
            //
            typeof y returns object
        </div>
    </div>

    <div class="w3-panel w3-note">
        <p>Do not create Boolean objects.</p>
        <p>The <code class="w3-codespan">new</code> keyword complicates the code and slows down execution speed.</p>
        <p>Boolean objects can produce unexpected results:</p>
    </div>

    <div class="w3-example">
        <p> When using the <code class="w3-codespan">==</code> operator, x and y are <b>equal</b>:</p>
        <div class="w3-code notranslate jsHigh">
            let x = false;<br>
            let y = new Boolean(false);<br>
        </div>
    </div>

    <div class="w3-example">
        <p> When using the <code class="w3-codespan">===</code> operator, x and y are <b>not equal</b>:</p>
        <div class="w3-code notranslate jsHigh">
            let x = false;<br>
            let y = new Boolean(false);<br>
        </div>
    </div>

    <div class="w3-panel w3-note">
        <p>Note the difference between (x==y) and (x===y).</p>
    </div>

    <div class="w3-example">
        <p><code class="w3-codespan">(x == y)</code> true or false?</p>
        <div class="w3-code notranslate jsHigh">
            let x = new Boolean(false);<br>
            let y = new Boolean(false);<br>
        </div>
    </div>
    <div class="w3-example">
        <p><code class="w3-codespan">(x === y)</code> true or false?</p>
        <div class="w3-code notranslate jsHigh">
            let x = new Boolean(false);<br>
            let y = new Boolean(false);<br>
        </div>
    </div>

    <div class="w3-panel w3-note">
        <p>Comparing two JavaScript objects <b>always</b> return <b>false</b>.</p>
    </div>

    <hr />
</div>

<div class="d-flex justify-content-between mt-3">
    <a class="btn btn-sm btn-success" asp-page="JS-Random">&#10094; Previous</a>
    <a class="btn btn-sm btn-success" asp-page="Js-Comparison">Next &#10095;</a>
</div>