@page
@model EmmanuelJavaScriptWeb.Pages.Js_Page.Js_SwitchModel
@{
    ViewData["Title"] = "JavaScript Switch";
}
<div class="container">
    <h1>JavaScript <span class="color_h1">Switch</span> Statement</h1>

    <hr>
    <p class="intro">The <code class="w3-codespan">switch</code> statement is used to perform different actions based on different conditions.</p>
    <hr>

    <h2>The JavaScript Switch Statement</h2>
    <p>Use the <code class="w3-codespan">switch</code> statement to select one of many code blocks to be executed.</p>
    <h3>Syntax</h3>
    <div class="w3-code w3-border notranslate jsHigh">
        <div>
            switch(<em>expression</em>) {<br>
            &nbsp;&nbsp;case <em>x</em>:<br>
            <em>
                &nbsp;&nbsp;&nbsp; // code block<br>
            </em>&nbsp;&nbsp;&nbsp; break;<br>
            &nbsp;&nbsp;case <em>y</em>:<br>
            <em>
                &nbsp;&nbsp;&nbsp; // code block<br>
            </em>&nbsp;&nbsp;&nbsp; break;<br>
            &nbsp;&nbsp;default:<br>
            &nbsp;&nbsp; &nbsp;// <em>code block</em><br>
            }
        </div>
    </div>

    <p>This is how it works:</p>
    <ul>
        <li>The switch expression is evaluated once.</li>
        <li>The value of the expression is compared with the values of each case.</li>
        <li>If there is a match, the associated block of code is executed.</li>
        <li>If there is no match, the default code block is executed.</li>
    </ul>
    <div class="w3-example">
        <h3>Example</h3>
        <p>
            The <code class="w3-codespan">getDay()</code> method returns the weekday as a number between
            0 and 6.
        </p>
        <p>(Sunday=0, Monday=1, Tuesday=2 ..)</p>
        <p>This example uses the weekday number to calculate the weekday name:</p>
        <div class="w3-code notranslate jsHigh">
            switch (new Date().getDay()) {<br>
            &nbsp;&nbsp;case 0:<br>
            &nbsp; &nbsp;&nbsp;day = &quot;Sunday&quot;;<br>
            &nbsp;&nbsp;&nbsp;&nbsp;break;<br>
            &nbsp;&nbsp;case 1:<br>
            &nbsp; &nbsp; day = &quot;Monday&quot;;<br>
            &nbsp;&nbsp;&nbsp;&nbsp;break;<br>
            &nbsp;&nbsp;case 2:<br>
            &nbsp; &nbsp;&nbsp; day = &quot;Tuesday&quot;;<br>
            &nbsp;&nbsp;&nbsp; break;<br>
            &nbsp;&nbsp;case 3:<br>
            &nbsp; &nbsp; day = &quot;Wednesday&quot;;<br>
            &nbsp;&nbsp;&nbsp; break;<br>
            &nbsp;&nbsp;case 4:<br>
            &nbsp; &nbsp; day = &quot;Thursday&quot;;<br>
            &nbsp;&nbsp;&nbsp;&nbsp;break;<br>
            &nbsp;&nbsp;case 5:<br>
            &nbsp; &nbsp; day = &quot;Friday&quot;;<br>
            &nbsp;&nbsp;&nbsp; break;<br>
            &nbsp;&nbsp;case 6:<br>
            &nbsp; &nbsp;&nbsp;day = &quot;Saturday&quot;;<br>
            }
        </div>
        <p>The result of day will be:</p>
        <div class="w3-white w3-padding notranslate">
            <code>
                <script>
                    let d = new Date().getDay();
                    switch (d) {
                        case 0:
                            x = "Sunday";
                            break;
                        case 1:
                            x = "Monday";
                            break;
                        case 2:
                            x = "Tuesday";
                            break;
                        case 3:
                            x = "Wednesday";
                            break;
                        case 4:
                            x = "Thursday";
                            break;
                        case 5:
                            x = "Friday";
                            break;
                        case 6:
                            x = "Saturday";
                            break;
                    }
                    document.write(x);
                </script>
            </code>
        </div>
    </div>
    <hr>
    <h2>The break Keyword</h2>
    <p>
        When JavaScript reaches a <code class="w3-codespan">break</code>
        keyword, it breaks out of the switch block.
    </p>
    <p>This will stop the execution inside the switch block.</p>
    <p>It is not necessary to break the last case in a switch block. The block breaks (ends) there anyway.</p>

    <div class="w3-panel w3-note">
        <p>
            <strong>Note: </strong>If you omit the break statement, the next case will be executed even if
            the evaluation does not match the case.
        </p>
    </div>


    <hr>
    <h2>The default Keyword</h2>
    <p>
        The <code class="w3-codespan">default</code> keyword specifies the code to run if there is no
        case match:
    </p>
    <div class="w3-example">
        <h3>Example</h3>
        <p>
            The <code class="w3-codespan">getDay()</code> method returns the weekday as a number between
            0 and 6.
        </p>
        <p>If today is neither Saturday (6) nor Sunday (0), write a default message:</p>
        <div class="w3-code notranslate jsHigh">
            switch (new Date().getDay()) {<br>
            &nbsp;
            case 6:<br>
            &nbsp; &nbsp; text = &quot;Today is Saturday&quot;;<br>
            &nbsp;&nbsp;&nbsp;&nbsp;break; <br>
            &nbsp;&nbsp;case 0:<br>
            &nbsp;&nbsp;&nbsp; text = &quot;Today is Sunday&quot;;<br>
            &nbsp;&nbsp;&nbsp; break; <br>
            &nbsp;
            default: <br>
            &nbsp;&nbsp;&nbsp; text = &quot;Looking forward to the Weekend&quot;;<br>}
        </div>
        <p>The result of text will be:</p>
        <div class="w3-white w3-padding notranslate">
            <code>
                <script>
                    switch (new Date().getDay()) {
                        case 6:
                            x = "Today is Saturday";
                            break;
                        case 0:
                            x = "Today is Sunday";
                            break;
                        default:
                            x = "Looking forward to the Weekend";
                    }
                    document.write(x);
                </script>
            </code>
        </div>
    </div>
    <p>
        The <code class="w3-codespan">default</code> case does not have to be the last case in a switch
        block:
    </p>
    <div class="w3-example">
        <h3>Example</h3>
        <div class="w3-code notranslate jsHigh">
            switch (new Date().getDay()) {<br>
            &nbsp;&nbsp;default: <br>
            &nbsp;&nbsp;&nbsp; text = &quot;Looking forward to the Weekend&quot;;<br>&nbsp;&nbsp;&nbsp;
            break;<br>&nbsp;&nbsp;case 6:<br>
            &nbsp; &nbsp; text = &quot;Today is Saturday&quot;;<br>
            &nbsp;&nbsp;&nbsp; break; <br>
            &nbsp;&nbsp;case 0:<br>
            &nbsp;&nbsp;&nbsp; text = &quot;Today is Sunday&quot;;<br>
            }
        </div>
    </div>
    <div class="w3-panel w3-note">
        <p>If <code class="w3-codespan">default</code> is not the last case in the switch block, remember to end the default case with a break.</p>
    </div>
    <hr>

    <h2>Common Code Blocks</h2>
    <p>
        Sometimes you will want different
        switch cases to use the same
        code.
    </p>
    <p>
        In this example case 4 and 5 share the same code block, and 0 and 6 share
        another code block:
    </p>
    <div class="w3-example">
        <h3>Example</h3>
        <div class="w3-code notranslate jsHigh">
            switch (new Date().getDay()) {<br>
            &nbsp;&nbsp;case 4:<br>&nbsp;&nbsp;case 5:<br>
            &nbsp;&nbsp;&nbsp; text = &quot;Soon it is Weekend&quot;;<br>
            &nbsp;&nbsp;&nbsp; break; <br>
            &nbsp;&nbsp;case 0:<br>
            &nbsp;&nbsp;case 6:<br>
            &nbsp;&nbsp;&nbsp; text = &quot;It is Weekend&quot;;<br>&nbsp;&nbsp;&nbsp;&nbsp;break;<br>&nbsp;&nbsp;default: <br>
            &nbsp;&nbsp;&nbsp;&nbsp;text = &quot;Looking forward to the Weekend&quot;;<br>
            }
        </div>
    </div>
    <hr>

    <h2>Switching Details</h2>
    <p>
        If multiple cases matches a case value, the <strong>first</strong> case is selected.
    </p>
    <p>
        If no matching cases are found, the program continues to the <strong>default</strong> label.
    </p>
    <p>
        If no default label is found, the program continues to the statement(s) <strong>after the switch</strong>.
    </p>
    <hr>

    <h2>Strict Comparison</h2>
    <p>Switch cases use <strong>strict</strong> comparison (===).</p>
    <p>The values must be of the same type to match.</p>
    <p>A strict comparison can only be true if the operands are of the same type.</p>
    <p>In this example there will be no match for x: </p>

    <div class="w3-example">
        <h3>Example</h3>
        <div class="w3-code notranslate jsHigh">
            let x = &quot;0&quot;;<br>switch (x) {<br>&nbsp;&nbsp;case 0:<br>&nbsp;&nbsp;&nbsp;&nbsp;text = &quot;Off&quot;;<br>
            &nbsp;&nbsp;&nbsp; break;<br>&nbsp;&nbsp;case 1:<br>&nbsp;&nbsp;&nbsp; text = &quot;On&quot;;<br>&nbsp;&nbsp;&nbsp;&nbsp;break;<br>
            &nbsp; default:<br>&nbsp;&nbsp;&nbsp;
            text = &quot;No value found&quot;;<br>}
        </div>
    </div>
    <hr>
</div>

<div class="d-flex justify-content-between mt-3">
    <a class="btn btn-sm btn-success" asp-page="JS-IfElse">&#10094; Previous</a>
    <a class="btn btn-sm btn-success" asp-page="Js-Loop-For">Next &#10095;</a>
</div>