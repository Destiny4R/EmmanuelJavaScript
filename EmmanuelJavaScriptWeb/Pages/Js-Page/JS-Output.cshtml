@page
@model EmmanuelJavaScriptWeb.Pages.Js_Page.JS_OutputModel
@{
    ViewData["Title"] = "JavaScript Output";
}
<div class="container">
<h1>JavaScript <span class="color_h1">Output</span></h1>
<hr>
<h2>JavaScript Display Possibilities</h2>
<p>JavaScript can &quot;display&quot; data in different ways:</p>
<ul>
 <li>Writing into an HTML element, using <code class="w3-codespan">innerHTML</code>.</li>
 <li>Writing into the HTML output using <code class="w3-codespan">document.write()</code>.</li>
  <li>Writing into an alert box, using <code class="w3-codespan">window.alert()</code>.</li>
  <li>Writing into the browser console, using <code class="w3-codespan">console.log()</code>.</li>
</ul>

<hr>
<h2>Using innerHTML</h2>
<p>To access an HTML element, JavaScript can use the <code class="w3-codespan">document.getElementById(id)</code> method. </p>
<p>The <code class="w3-codespan">id</code> attribute defines the HTML element. The <code class="w3-codespan">innerHTML</code>  property defines the HTML content:</p>
<div class="w3-example">
<h3>Example</h3>
<div class="w3-code notranslate htmlHigh">
 &lt;!DOCTYPE html&gt;<br>&lt;html&gt;<br>
&lt;body&gt;<br>
<br>
&lt;h1&gt;My First Web Page&lt;/h1&gt;<br>
 &lt;p&gt;My First Paragraph&lt;/p&gt;<br>
    <br>&lt;p id=&quot;demo&quot;&gt;&lt;/p&gt;<br>
<br>
&lt;script&gt;<br>
 document.getElementById(&quot;demo&quot;).innerHTML = 5 + 6;<br>
    &lt;/script&gt;<br>
<br>
&lt;/body&gt;<br>
&lt;/html&gt;
</div>
</div>

<div class="w3-panel w3-note">
<p>Changing the innerHTML property of an HTML element
is a common way to display data in HTML.</p>
</div>

<hr>

<h2>Using document.write()</h2>
<p>For testing purposes, it is convenient to use <code class="w3-codespan">document.write()</code>:</p>
<div class="w3-example">
<h3>Example</h3>
<div class="w3-code notranslate htmlHigh">
 &lt;!DOCTYPE html&gt;<br>&lt;html&gt;<br>
&lt;body&gt;<br><br>&lt;h1&gt;My First Web Page&lt;/h1&gt;<br>
 &lt;p&gt;My first paragraph.&lt;/p&gt;<br>
 <br>&lt;script&gt;<br>document.write(5 + 6);<br>&lt;/script&gt;<br>
<br>
&lt;/body&gt;<br>
&lt;/html&gt;
</div>
</div>
<div class="w3-panel w3-warning">
<p>Using document.write() after an HTML document is loaded, will <strong>delete all existing HTML</strong>:</p>
</div>
<div class="w3-example">
<h3>Example</h3>
<div class="w3-code notranslate htmlHigh">
&lt;!DOCTYPE html&gt;<br>
&lt;html&gt;<br>
&lt;body&gt;<br><br>
&lt;h1&gt;My First Web Page&lt;/h1&gt;<br>
 &lt;p&gt;My first paragraph.&lt;/p&gt;<br><br>
&lt;button type=&quot;button&quot; onclick=&quot;document.write(5 + 6)&quot;&gt;Try it&lt;/button&gt;<br><br>
&lt;/body&gt;<br>
&lt;/html&gt;
</div>
</div>

<div class="w3-panel w3-note">
<p>The document.write() method should only be used for testing.</p>
</div>

<hr>

<h2>Using window.alert()</h2>
<p>You can use an alert box to display data:</p>
<div class="w3-example">
<h3>Example</h3>
<div class="w3-code notranslate htmlHigh">
&lt;!DOCTYPE html&gt;<br>
&lt;html&gt;<br>
&lt;body&gt;<br><br>
&lt;h1&gt;My First Web Page&lt;/h1&gt;<br>&lt;p&gt;My first paragraph.&lt;/p&gt;<br>
 <br>
&lt;script&gt;<br>window.alert(5 + 6);<br>
&lt;/script&gt;<br>
<br>
&lt;/body&gt;<br>
&lt;/html&gt;
</div>
</div>

<p>You can skip the <code class="w3-codespan">window</code> keyword.</p>

<p>In JavaScript, the window object is the global scope object. This means that variables, properties, and methods by default belong to the window object.
This also means that specifying the <code class="w3-codespan">window</code> keyword is optional:</p>

<div class="w3-example">
<h3>Example</h3>
<div class="w3-code notranslate htmlHigh">
&lt;!DOCTYPE html&gt;<br>
&lt;html&gt;<br>
&lt;body&gt;<br><br>
&lt;h1&gt;My First Web Page&lt;/h1&gt;<br>&lt;p&gt;My first paragraph.&lt;/p&gt;<br>
 <br>
&lt;script&gt;<br>alert(5 + 6);<br>
&lt;/script&gt;<br>
<br>
&lt;/body&gt;<br>
&lt;/html&gt;
</div>
</div>

<hr>
<h2>Using console.log()</h2>
<p>For debugging purposes, you can call the <code class="w3-codespan">console.log()</code> method
in the browser to display data.</p>

<div class="w3-panel w3-note">
<p>You will learn more about debugging in a later chapter.</p>
</div>

<div class="w3-example">
<h3>Example</h3>
<div class="w3-code notranslate htmlHigh">
&lt;!DOCTYPE html&gt;<br>
&lt;html&gt;<br>
&lt;body&gt;<br>
 <br>
&lt;script&gt;<br>
console.log(5 + 6);<br>
&lt;/script&gt;<br>
<br>
&lt;/body&gt;<br>
&lt;/html&gt;
</div>
</div>

<hr>
<h2>JavaScript Print</h2>
<p>JavaScript does not have any print object or print methods.</p>
<p>You cannot access output devices from JavaScript.</p>
<p>The only exception is that you can call the <code class="w3-codespan">window.print()</code> method in
the browser to print the content of the current window.</p>
<div class="w3-example">
<h3>Example</h3>
<div class="w3-code notranslate htmlHigh">
&lt;!DOCTYPE html&gt;<br>
&lt;html&gt;<br>&lt;body&gt;<br><br>
&lt;button onclick=&quot;window.print()&quot;&gt;Print this page&lt;/button&gt;<br><br>
&lt;/body&gt;<br>
&lt;/html&gt;
</div>
</div>
</div>

<div class="d-flex justify-content-between mt-3">
    <a class="btn btn-sm btn-success" asp-page="/Js-Page/js-WhereTo">&#10094; Previous</a>
    <a class="btn btn-sm btn-success" asp-page="/Js-Page/JS-Statement">Next &#10095;</a>
</div>